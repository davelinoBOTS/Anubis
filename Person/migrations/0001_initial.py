# Generated by Django 4.0.4 on 2022-05-22 16:43

import Anubis.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import localflavor.br.models
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PhysicalPerson',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='Verbose ID')),
                ('registrationDate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Verbose Registration Date')),
                ('updateDate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Verbose Update Date')),
                ('isActive', models.BooleanField(default=True, verbose_name='Verbose Is Active')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Verbose Email')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='admin/person/photos/', validators=[Anubis.validators.validate_images_extension], verbose_name='Verbose Photo')),
                ('fullName', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(255)], verbose_name='Verbose Full Name')),
                ('cpf', localflavor.br.models.BRCPFField(max_length=14, verbose_name='Verbose CPF')),
                ('rg', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.MaxLengthValidator(20)], verbose_name='Verbose RG')),
                ('birthDate', models.DateField(blank=True, null=True, verbose_name='Verbose Date Birth')),
                ('sex', models.CharField(blank=True, choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], max_length=100, null=True, verbose_name='Verbose Sex')),
            ],
            options={
                'verbose_name': 'Verbose Physical Person',
                'verbose_name_plural': 'Verbose Physical Person Plural',
                'ordering': ['fullName', 'cpf', 'sex'],
            },
        ),
        migrations.CreateModel(
            name='SystemUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='Verbose ID')),
                ('registrationDate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Verbose Registration Date')),
                ('updateDate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Verbose Update Date')),
                ('isActive', models.BooleanField(default=True, verbose_name='Verbose Is Active')),
                ('code', models.CharField(max_length=17, unique=True, validators=[django.core.validators.MinLengthValidator(17), django.core.validators.MaxLengthValidator(17)], verbose_name='Verbose Code')),
                ('username', models.CharField(help_text='Required. 15 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'Valid user.', 'invalid')], verbose_name='Verbose Username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Verbose Email')),
                ('first_name', models.CharField(max_length=30, verbose_name='Verbose First Name')),
                ('last_name', models.CharField(max_length=30, verbose_name='Verbose Last Name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Verbose Staff Status')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions.', verbose_name='Verbose Superuser Status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Uncheck this instead of deleting accounts.', verbose_name='Verbose Is Active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Verbose Date Joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('physicalPerson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Person.physicalperson', verbose_name='Verbose Physical Person')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Verbose System User',
                'verbose_name_plural': 'Verbose System User Plural',
                'ordering': ['code', 'username', 'first_name', 'last_name'],
            },
        ),
    ]
